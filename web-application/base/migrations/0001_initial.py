# Generated by Django 4.2.11 on 2024-05-11 14:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SharedID',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Keyboard', 'Keyboard'), ('Mouse', 'Mouse'), ('Headphones', 'Headphones')], default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=35, null=True)),
                ('rating', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('body', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.sharedid')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('shared_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='base.sharedid')),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2024)])),
                ('type', models.CharField(choices=[('-', '-'), ('Мышь', 'Мышь'), ('Игровая мышь', 'Игровая мышь'), ('Трекбол', 'Трекбол')], default='', max_length=20)),
                ('wireless', models.BooleanField(blank=True, null=True)),
                ('sensor_type', models.CharField(choices=[('-', '-'), ('Лазерный', 'Лазерный'), ('Оптический', 'Оптический'), ('BlueTrack', 'BlueTrack')], default='', max_length=20)),
                ('sensor_model', models.CharField(blank=True, max_length=50, null=True)),
                ('max_sens_res', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_pooling_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('body_material', models.CharField(blank=True, max_length=200, null=True)),
                ('backlight', models.BooleanField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('shared_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.sharedid')),
            ],
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2024)])),
                ('type', models.CharField(choices=[('-', '-'), ('Игровая', 'Игровая'), ('Офисная', 'Офисная'), ('Стандартная', 'Стандартная'), ('Офисная', 'Офисная')], default='', max_length=20)),
                ('switch_type', models.CharField(choices=[('-', '-'), ('Механическая', 'Механическая'), ('Мембранная', 'Мембранная'), ('Оптическая', 'Оптическая')], default='', max_length=30)),
                ('switch_name', models.CharField(blank=True, max_length=200, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('сyrillic', models.BooleanField(blank=True, null=True)),
                ('wireless', models.BooleanField(blank=True, null=True)),
                ('cable_sleeving', models.BooleanField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('shared_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.sharedid')),
            ],
        ),
        migrations.CreateModel(
            name='Headphones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2024)])),
                ('type', models.CharField(choices=[('-', '-'), ('Без микрофона', 'Без микрофона'), ('С микрофоном', 'С микрофоном'), ('Игровые', 'Игровые')], default='', max_length=20)),
                ('wireless', models.BooleanField(blank=True, null=True)),
                ('ruggedness', models.BooleanField(blank=True, null=True)),
                ('body_material', models.CharField(blank=True, max_length=200, null=True)),
                ('headphone_color', models.CharField(blank=True, max_length=200, null=True)),
                ('cable_color', models.CharField(blank=True, max_length=200, null=True)),
                ('earpad_material', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('shared_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.sharedid')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.sharedid')),
            ],
        ),
    ]
